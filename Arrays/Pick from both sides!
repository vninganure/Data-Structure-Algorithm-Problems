/*
Problem Description
You are given an integer array A of size N.

You have to perform B operations. In one operation, you can remove either the leftmost or the rightmost element of the array A.

Find and return the maximum possible sum of the elements that were removed after B operations.

NOTE: Suppose B = 4, and array A contains 10 elements, then

You can remove the first four elements or can remove the last four elements, or can remove 1 from front and 3 from the back, etc. You need to return the maximum possible sum of elements you can remove.

Problem Constraints:
1 <= N <= 105
1 <= B <= N
-103 <= A[i] <= 103

Input 1:

 A = [5, -2, 3 , 1, 2]
 B = 3
*/

public class Solution {
    public int solve(int[] A, int B) {
        int n = A.length;
        int current_sum = 0;
        int ans = Integer.MIN_VALUE;

        for(int i = 0; i<B; i++){
            current_sum += A[i];
        }
        ans = Math.max(current_sum, ans);

        int back = B-1;
        int right = n-1;

        while(back>=0){
            current_sum += A[right]-A[back];
            ans = Math.max(ans, current_sum);
            back--;
            right--;
        }
        return ans;
    }
}
